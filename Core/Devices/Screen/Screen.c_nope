#include "Screen.h"

void Screen_Constructor()
{
	ScreenCharacterAttributes = SCREEN_CHAR_ATTRIBUTES;
	memset(ScreenVideoBasePointer,0,sizeof(char)*SCREEN_SIZE_BYTES);
	ScreenScrollOffsetMax = (SCREEN_BUFFER_SIZE_BYTES - SCREEN_SIZE_BYTES) / SCREEN_ROW_SIZE_BYTES;
	Screen_update();
}

void Screen_clear()
{
	uint32_t j;
	for (j=0; j < SCREEN_CHAR_SIZE; j++)
	{
		ScreenBuffer[ScreenBufferWriteOffset++] = ' ';
		ScreenBuffer[ScreenBufferWriteOffset++] = ScreenCharacterAttributes;
	}
	Screen_update();
}

void Screen_update()
{
	memcpy(ScreenVideoBasePointer,&ScreenBuffer[ScreenBufferReadOffset],sizeof(char)*SCREEN_SIZE_BYTES);
}

void Screen_print(const char* str)
{
	uint32_t i;
	for (i=0; str[i] != '\0'; i++)
	{
		if (str[i] == '\n')
		{
			newLine();
		}
		else if (str[i] == '\t')
		{
			int j;
			for (j=0;j<4;j++)
			{
				ScreenBuffer[ScreenBufferWriteOffset++] = ' ';
				ScreenBuffer[ScreenBufferWriteOffset++] = ScreenCharacterAttributes;
			}

		}
		else
		{
			ScreenBuffer[ScreenBufferWriteOffset++] = str[i];
			ScreenBuffer[ScreenBufferWriteOffset++] = ScreenCharacterAttributes;
		}
	}
	Screen_update();
}

void Screen_printLine(const char* str)
{
	Screen_print(str);
	Screen_newLine();
}

void Screen_newLine()
{
	int32_t screenCurrentColumn = ScreenBufferWriteOffset % SCREEN_ROW_SIZE_BYTES;
	ScreenBufferWriteOffset = ScreenBufferWriteOffset + SCREEN_ROW_SIZE_BYTES - screenCurrentColumn;
	if (ScreenBufferWriteOffset > SCREEN_SIZE_BYTES)
	{
		moveScrollOffset(1);
	}
	update();
}

void Screen_moveScrollOffset(int32_t offset)
{
	ScreenScrollOffset += offset;
	if (ScreenScrollOffset < 0)
	{
		ScreenScrollOffset = 0;
	}
	if (ScreenScrollOffset > ScreenScrollOffsetMax)
	{
		ScreenScrollOffset = ScreenScrollOffsetMax;
	}
	ScreenBufferReadOffset = ScreenScrollOffset * SCREEN_ROW_SIZE_BYTES;
	Screen_update();
}

void Screen_setCharacterAttributes(uint8_t attributes)
{
	ScreenCharacterAttributes = attributes;
}
